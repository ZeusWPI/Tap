<% details = details || false %>
<% actions = actions || [] %>
<% display_categories = defined?(categories) ? categories : true %>
<% compact = compact || false %>
<% compact_mobile = compact_mobile || false %>

<div v-scope="ProductsController({})">
  <!-- Header -->
  <div class="columns is-multiline" v-cloak>
    <!-- Tabs -->
    <% if display_categories %>
      <div class="column">
        <div class="tabs">
          <ul>
            <!-- All -->
            <li :class="tab === 'all' ? 'is-active' : ''" >
              <a @click="tab = 'all'">
                All
              </a>
            </li>

            <!-- Categories -->
              <% @categories.each do |category, index| %>
                <li :class="tab === '<%= category %>' ? 'is-active' : ''" >
                  <a @click="tab = '<%= category %>'">
                    <%= category.titleize %>
                  </a>
                </li>
              <% end %>
          </ul>
        </div>
      </div>
    <% end %>

    <!-- Search -->
    <div class="column <%= display_categories ? 'is-narrow' : 'is-fullwidth' %>">
      <div class="search">
        <input v-model="search" class="input" placeholder="Search for a product..." />
      </div>
    </div>
  </div>

  <!-- Content -->
  <div class="tabs-content">
    <div class="columns is-multiline">
      <%= render partial: "products/product",
        collection: @products,
        as: :product,
        cache: true,
        locals: {
          search: true,
          details: details,
          actions: actions,
          compact: compact,
          compact_mobile: compact_mobile
        }
      %>
    </div>

    <!--
    No search results placeholder
    -->
    <div class="placeholder" v-show="showPlaceholder" v-cloak>
      No products found matching that query.
    </div>
  </div>
</div>

<script>
function ProductsController(props) {
  return {
    /**
     * Currently active tab category.
     */
    tab: "all",

    /**
     * Value of the search input.
     */
    search: "",

    /**
     * Should a specific product be shown
     * @param name name of the product
     * @param category name of the category of the product
     */
    showProduct(name, category) {
      // If the product doesn't match the category, return false
      if (category && this.tab !== "all" && this.tab !== category) {
        return false;
      }

      // If the product doesn't match the search query, return false
      if (this.search && !name.toLowerCase().includes(this.search.toLowerCase())) {
        return false;
      }

      return true;
    },

    /**
     * Should the placeholder be shown (when no products match a given query)
     */
    get showPlaceholder() {
      // This is a simple hack to check if no products match a specific query.
      // As product name the concatenation of all products is used,
      // so when there is no match the string will not include the searched keyword
      // and the placeholder can be shown.
      return !this.showProduct('<%= escape_javascript @products.map(&:name).join %>', null)
    }
  }
}
</script>
